from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql import func # Import func for NOW()

# revision identifiers, used by Alembic.
revision: str = '79108569c0f0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('api_keys', 'key_hash',
               existing_type=sa.VARCHAR(length=255),
               comment='API密钥的哈希值',
               existing_comment='API密钥的哈希值 (不直接存储明文密钥)',
               existing_nullable=False)
    op.drop_table_comment(
        'api_keys',
        existing_comment='存储API密钥的哈希值和相关信息',
        schema=None
    )
    op.drop_table_comment(
        'assets',
        existing_comment='存储产线/车间等资产的基本信息',
        schema=None
    )

    # Drop the old 'id' column (UUID type)
    op.drop_column('models', 'id')

    # Add the new 'id' column (Integer type)
    op.add_column('models', sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True, comment='模型的唯一ID'))

    # Step 1: Add new columns as nullable=True first
    op.add_column('models', sa.Column('model_version', sa.String(length=50), nullable=True, comment='模型版本，例如训练时间戳 20250706100000'))
    op.add_column('models', sa.Column('model_path', sa.Text(), nullable=True, comment='主模型文件的路径'))
    op.add_column('models', sa.Column('scaler_path', sa.Text(), nullable=True, comment='值缩放器文件的路径'))
    op.add_column('models', sa.Column('scaler_cov_path', sa.Text(), nullable=True, comment='协变量缩放器文件的路径'))
    op.add_column('models', sa.Column('created_at', sa.DateTime(), nullable=True, comment='模型记录的创建时间'))
    op.add_column('models', sa.Column('description', sa.Text(), nullable=True, comment='模型的用户友好描述'))

    # Step 2: Populate default values for existing rows for new NOT NULL columns
    op.execute("UPDATE models SET model_version = 'initial_migration' WHERE model_version IS NULL")
    op.execute("UPDATE models SET model_path = '/path/to/initial_model' WHERE model_path IS NULL")
    op.execute("UPDATE models SET created_at = NOW() WHERE created_at IS NULL")

    # Step 3: Alter columns to nullable=False after populating
    op.alter_column('models', 'model_version', existing_type=sa.String(length=50), nullable=False, comment='模型版本，例如训练时间戳 20250706100000')
    op.alter_column('models', 'model_path', existing_type=sa.Text(), nullable=False, comment='主模型文件的路径')
    op.alter_column('models', 'created_at', existing_type=sa.DateTime(), nullable=False, comment='模型记录的创建时间')

    op.alter_column('models', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='是否是当前资产的默认推荐模型',
               existing_comment='是否是当前资产的活跃模型',
               existing_nullable=False)
    op.create_index(op.f('ix_models_asset_id'), 'models', ['asset_id'], unique=False)
    op.create_unique_constraint(None, 'models', ['model_version'])

    op.drop_table_comment(
        'models',
        existing_comment='存储训练好的模型及其元数据',
        schema=None
    )
    op.drop_column('models', 'trained_at')
    op.drop_column('models', 'path')
    op.drop_column('models', 'version')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Reverse the column nullability changes first
    op.alter_column('models', 'created_at', existing_type=sa.DateTime(), nullable=True, comment='模型记录的创建时间')
    op.alter_column('models', 'model_path', existing_type=sa.Text(), nullable=True, comment='主模型文件的路径')
    op.alter_column('models', 'model_version', existing_type=sa.String(length=50), nullable=True, comment='模型版本，例如训练时间戳 20250706100000')

    op.add_column('models', sa.Column('version', sa.VARCHAR(length=50), autoincrement=False, nullable=False, comment='模型版本，例如 v1.0'))
    op.add_column('models', sa.Column('path', sa.TEXT(), autoincrement=False, nullable=False, comment='模型文件在文件系统中的路径'))
    op.add_column('models', sa.Column('trained_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False, comment='模型训练完成时间'))
    op.create_table_comment(
        'models',
        '存储训练好的模型及其元数据',
        existing_comment=None,
        schema=None
    )
    op.drop_constraint(None, 'models', type_='unique')
    op.drop_index(op.f('ix_models_asset_id'), table_name='models')
    op.alter_column('models', 'is_active',
               existing_type=sa.BOOLEAN(),
               comment='是否是当前资产的活跃模型',
               existing_comment='是否是当前资产的默认推荐模型',
               existing_nullable=False)
    op.alter_column('models', 'id',
               existing_type=sa.Integer(),
               type_=sa.UUID(),
               existing_comment='模型的唯一ID',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('models', 'description')
    op.drop_column('models', 'created_at')
    op.drop_column('models', 'scaler_cov_path')
    op.drop_column('models', 'scaler_path')
    op.drop_column('models', 'model_path')
    op.drop_column('models', 'model_version')
    op.create_table_comment(
        'assets',
        '存储产线/车间等资产的基本信息',
        existing_comment=None,
        schema=None
    )
    op.create_table_comment(
        'api_keys',
        '存储API密钥的哈希值和相关信息',
        existing_comment=None,
        schema=None
    )
    op.alter_column('api_keys', 'key_hash',
               existing_type=sa.VARCHAR(length=255),
               comment='API密钥的哈希值 (不直接存储明文密钥)',
               existing_comment='API密钥的哈希值',
               existing_nullable=False)
    # ### end Alembic commands ###