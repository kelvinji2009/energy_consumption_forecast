version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-energy_forecast_db}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-energy_forecast_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Service for Celery
  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Backend API Service (FastAPI)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: uvicorn api_server.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_BROKER_URL=${REDIS_BROKER_URL}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Celery Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_worker.celery_app worker -l info
    volumes:
      - .:/app
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_BROKER_URL=${REDIS_BROKER_URL}
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  # Frontend Service (React + Nginx)
  frontend:
    build:
      context: ./admin_frontend
      dockerfile: Dockerfile
    ports:
      - "5173:80"
    depends_on:
      - api

volumes:
  postgres_data:
    driver: local
